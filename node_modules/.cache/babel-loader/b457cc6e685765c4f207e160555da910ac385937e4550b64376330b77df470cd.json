{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthr\\\\OneDrive\\\\Desktop\\\\React To-do-app\\\\todo-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTask, updateTask } from '../redux/actions/taskActions';\nimport { Button, ListGroup, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks); // Make sure the path is correct\n  const dispatch = useDispatch();\n  const handleUpdateTask = (id, newName) => {\n    if (newName.trim()) {\n      dispatch(updateTask(id, newName));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: Array.isArray(tasks) && tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: task.name,\n        onChange: e => handleUpdateTask(task.id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        onClick: () => dispatch(deleteTask(task.id)),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"CsZaW/tJMRku090Oh9Epf38CEO8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useDispatch","useSelector","deleteTask","updateTask","Button","ListGroup","Form","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","handleUpdateTask","id","newName","trim","children","Array","isArray","length","map","task","Item","className","Control","type","value","name","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/components/TaskList.js"],"sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteTask, updateTask } from '../redux/actions/taskActions';\r\nimport { Button, ListGroup, Form } from 'react-bootstrap';\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector((state) => state.tasks.tasks); // Make sure the path is correct\r\n  const dispatch = useDispatch();\r\n\r\n  const handleUpdateTask = (id, newName) => {\r\n    if (newName.trim()) {\r\n      dispatch(updateTask(id, newName));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {Array.isArray(tasks) && tasks.length > 0 ? (\r\n        tasks.map((task) => (\r\n          <ListGroup.Item key={task.id} className=\"d-flex justify-content-between align-items-center\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={task.name}\r\n              onChange={(e) => handleUpdateTask(task.id, e.target.value)}\r\n            />\r\n            <Button\r\n              variant=\"danger\"\r\n              onClick={() => dispatch(deleteTask(task.id))}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))\r\n      ) : (\r\n        <ListGroup.Item>No tasks available</ListGroup.Item>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,UAAU,QAAQ,8BAA8B;AACrE,SAASC,MAAM,EAAEC,SAAS,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;EACzD,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,gBAAgB,GAAGA,CAACC,EAAE,EAAEC,OAAO,KAAK;IACxC,IAAIA,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE;MAClBJ,QAAQ,CAACV,UAAU,CAACY,EAAE,EAAEC,OAAO,CAAC,CAAC;IACnC;EACF,CAAC;EAED,oBACER,OAAA,CAACH,SAAS;IAAAa,QAAA,EACPC,KAAK,CAACC,OAAO,CAACT,KAAK,CAAC,IAAIA,KAAK,CAACU,MAAM,GAAG,CAAC,GACvCV,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACbf,OAAA,CAACH,SAAS,CAACmB,IAAI;MAAeC,SAAS,EAAC,mDAAmD;MAAAP,QAAA,gBACzFV,OAAA,CAACF,IAAI,CAACoB,OAAO;QACXC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEL,IAAI,CAACM,IAAK;QACjBC,QAAQ,EAAGC,CAAC,IAAKjB,gBAAgB,CAACS,IAAI,CAACR,EAAE,EAAEgB,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eACF5B,OAAA,CAACJ,MAAM;QACLiC,OAAO,EAAC,QAAQ;QAChBC,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAACX,UAAU,CAACqB,IAAI,CAACR,EAAE,CAAC,CAAE;QAAAG,QAAA,EAC9C;MAED;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAXUb,IAAI,CAACR,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYZ,CACjB,CAAC,gBAEF5B,OAAA,CAACH,SAAS,CAACmB,IAAI;MAAAN,QAAA,EAAC;IAAkB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB;EACnD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAC1B,EAAA,CAjCID,QAAQ;EAAA,QACER,WAAW,EACRD,WAAW;AAAA;AAAAuC,EAAA,GAFxB9B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}