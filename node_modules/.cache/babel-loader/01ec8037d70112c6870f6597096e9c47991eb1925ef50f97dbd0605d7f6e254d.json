{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthr\\\\OneDrive\\\\Desktop\\\\React To-do-app\\\\todo-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteTask, fetchWeather } from '../redux/actions/taskActions';\nimport { ListGroup, Button, Spinner } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks.tasks);\n  const weather = useSelector(state => state.weather);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Example: fetch weather data when the component mounts\n    if (tasks.some(task => task.isOutdoor)) {\n      dispatch(fetchWeather('New York')); // Use an appropriate location or task-specific location\n    }\n  }, [tasks, dispatch]);\n  const handleDelete = id => {\n    dispatch(deleteTask(id));\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [task.text, \" - \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge bg-${task.priority.toLowerCase()}`,\n            children: task.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), task.isOutdoor && weather.data && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Weather:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), \" \", weather.data.weather[0].description, \", \", Math.round(weather.data.main.temp - 273.15), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), weather.loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"KoapKQw0y3ECbwiMo5q6GDQB5HI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","deleteTask","fetchWeather","ListGroup","Button","Spinner","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","weather","dispatch","some","task","isOutdoor","handleDelete","id","children","map","Item","className","text","priority","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","data","description","Math","round","main","temp","variant","onClick","loading","animation","_c","$RefreshReg$"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteTask, fetchWeather } from '../redux/actions/taskActions';\r\nimport { ListGroup, Button, Spinner } from 'react-bootstrap';\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector(state => state.tasks.tasks);\r\n  const weather = useSelector(state => state.weather);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // Example: fetch weather data when the component mounts\r\n    if (tasks.some(task => task.isOutdoor)) {\r\n      dispatch(fetchWeather('New York')); // Use an appropriate location or task-specific location\r\n    }\r\n  }, [tasks, dispatch]);\r\n\r\n  const handleDelete = id => {\r\n    dispatch(deleteTask(id));\r\n  };\r\n\r\n  return (\r\n    <ListGroup>\r\n      {tasks.map(task => (\r\n        <ListGroup.Item key={task.id}>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n              {task.text} - <span className={`badge bg-${task.priority.toLowerCase()}`}>{task.priority}</span>\r\n              {task.isOutdoor && weather.data && (\r\n                <div>\r\n                  <strong>Weather:</strong> {weather.data.weather[0].description}, {Math.round(weather.data.main.temp - 273.15)}Â°C\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Button variant=\"danger\" onClick={() => handleDelete(task.id)}>Delete</Button>\r\n          </div>\r\n        </ListGroup.Item>\r\n      ))}\r\n      {weather.loading && <Spinner animation=\"border\" />}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}