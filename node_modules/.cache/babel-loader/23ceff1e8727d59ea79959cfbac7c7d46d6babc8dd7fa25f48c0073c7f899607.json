{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthr\\\\OneDrive\\\\Desktop\\\\React To-do-app\\\\todo-app\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// src/components/TaskList.js\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteTask } from '../redux/actions/taskActions';\nimport { ListGroup, Button, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const tasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n  if (!Array.isArray(tasks)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => dispatch(deleteTask(task.id)),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"CsZaW/tJMRku090Oh9Epf38CEO8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useSelector","useDispatch","deleteTask","ListGroup","Button","Row","Col","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","Item","name","xs","variant","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/components/TaskList.js"],"sourcesContent":["// src/components/TaskList.js\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../redux/actions/taskActions';\r\nimport { ListGroup, Button, Row, Col } from 'react-bootstrap';\r\n\r\nconst TaskList = () => {\r\n  const tasks = useSelector(state => state.tasks);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!Array.isArray(tasks)) {\r\n    return <div>No tasks available</div>;\r\n  }\r\n\r\n  return (\r\n    <ListGroup>\r\n      {tasks.map((task) => (\r\n        <ListGroup.Item key={task.id}>\r\n          <Row>\r\n            <Col>{task.name}</Col>\r\n            <Col xs=\"auto\">\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => dispatch(deleteTask(task.id))}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,KAAK,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACa,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IACzB,oBAAOH,OAAA;MAAAQ,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACEZ,OAAA,CAACL,SAAS;IAAAa,QAAA,EACPL,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA,CAACL,SAAS,CAACoB,IAAI;MAAAP,QAAA,eACbR,OAAA,CAACH,GAAG;QAAAW,QAAA,gBACFR,OAAA,CAACF,GAAG;UAAAU,QAAA,EAAEM,IAAI,CAACE;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtBZ,OAAA,CAACF,GAAG;UAACmB,EAAE,EAAC,MAAM;UAAAT,QAAA,eACZR,OAAA,CAACJ,MAAM;YACLsB,OAAO,EAAC,QAAQ;YAChBC,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACX,UAAU,CAACoB,IAAI,CAACM,EAAE,CAAC,CAAE;YAAAZ,QAAA,EAC9C;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAXaE,IAAI,CAACM,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYZ,CACjB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACV,EAAA,CA3BID,QAAQ;EAAA,QACET,WAAW,EACRC,WAAW;AAAA;AAAA4B,EAAA,GAFxBpB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}