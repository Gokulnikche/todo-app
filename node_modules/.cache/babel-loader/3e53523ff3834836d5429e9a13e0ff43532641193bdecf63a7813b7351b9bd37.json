{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ruthr\\\\OneDrive\\\\Desktop\\\\React To-do-app\\\\todo-app\\\\src\\\\components\\\\TaskInput.js\",\n  _s = $RefreshSig$();\n// src/components/TaskInput.js\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTask } from '../redux/actions/taskActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskInput = () => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const dispatch = useDispatch();\n  const handleAddTask = () => {\n    if (taskName.trim() !== '') {\n      dispatch(addTask({\n        name: taskName,\n        priority: 'Medium'\n      }));\n      setTaskName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formTaskName\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter task\",\n        value: taskName,\n        onChange: e => setTaskName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskInput, \"jHVVkFvZGAOwH+QoJEqiqklhoDY=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskInput;\nexport default TaskInput;\nvar _c;\n$RefreshReg$(_c, \"TaskInput\");","map":{"version":3,"names":["React","useState","useDispatch","addTask","Form","Button","jsxDEV","_jsxDEV","TaskInput","_s","taskName","setTaskName","dispatch","handleAddTask","trim","name","priority","children","Group","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/components/TaskInput.js"],"sourcesContent":["// src/components/TaskInput.js\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask } from '../redux/actions/taskActions';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst TaskInput = () => {\r\n  const [taskName, setTaskName] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddTask = () => {\r\n    if (taskName.trim() !== '') {\r\n      dispatch(addTask({ name: taskName, priority: 'Medium' }));\r\n      setTaskName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group controlId=\"formTaskName\">\r\n        <Form.Label>Task Name</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Enter task\"\r\n          value={taskName}\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" onClick={handleAddTask}>\r\n        Add Task\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskInput;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,8BAA8B;AACtD,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIH,QAAQ,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BF,QAAQ,CAACT,OAAO,CAAC;QAAEY,IAAI,EAAEL,QAAQ;QAAEM,QAAQ,EAAE;MAAS,CAAC,CAAC,CAAC;MACzDL,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACH,IAAI;IAAAa,QAAA,gBACHV,OAAA,CAACH,IAAI,CAACc,KAAK;MAACC,SAAS,EAAC,cAAc;MAAAF,QAAA,gBAClCV,OAAA,CAACH,IAAI,CAACgB,KAAK;QAAAH,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAClCjB,OAAA,CAACH,IAAI,CAACqB,OAAO;QACXC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,YAAY;QACxBC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACbjB,OAAA,CAACF,MAAM;MAAC2B,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEpB,aAAc;MAAAI,QAAA,EAAC;IAElD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACf,EAAA,CA3BID,SAAS;EAAA,QAEIN,WAAW;AAAA;AAAAgC,EAAA,GAFxB1B,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}