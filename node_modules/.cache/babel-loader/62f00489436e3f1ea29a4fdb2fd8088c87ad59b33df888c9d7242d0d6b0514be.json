{"ast":null,"code":"export const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const loginUser = credentials => async dispatch => {\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n  try {\n    // Mock API call or replace with actual API call\n    // Replace with your authentication logic\n    const user = {\n      id: 1,\n      name: 'John Doe'\n    }; // Example user object\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","loginUser","credentials","dispatch","type","user","id","name","payload","error","message"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/redux/actions/userActions.js"],"sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const loginUser = (credentials) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_REQUEST });\r\n  try {\r\n    // Mock API call or replace with actual API call\r\n    // Replace with your authentication logic\r\n    const user = { id: 1, name: 'John Doe' }; // Example user object\r\n    dispatch({ type: LOGIN_SUCCESS, payload: user });\r\n  } catch (error) {\r\n    dispatch({ type: LOGIN_FAILURE, payload: error.message });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAC5C,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,SAAS,GAAIC,WAAW,IAAK,MAAOC,QAAQ,IAAK;EAC5DA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAc,CAAC,CAAC;EACjC,IAAI;IACF;IACA;IACA,MAAMO,IAAI,GAAG;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAC,CAAC,CAAC;IAC1CJ,QAAQ,CAAC;MAAEC,IAAI,EAAEL,aAAa;MAAES,OAAO,EAAEH;IAAK,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdN,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,aAAa;MAAEQ,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EAC3D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}