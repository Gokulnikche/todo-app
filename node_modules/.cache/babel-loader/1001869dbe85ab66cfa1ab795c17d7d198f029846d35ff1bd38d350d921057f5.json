{"ast":null,"code":"import { ADD_TASK, DELETE_TASK, FETCH_TASKS_SUCCESS } from '../actions/taskActions';\nconst initialState = [];\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASK:\n      return [...state, {\n        id: state.length + 1,\n        ...action.payload\n      }];\n    case DELETE_TASK:\n      return state.filter(task => task.id !== action.payload);\n    case FETCH_TASKS_SUCCESS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["ADD_TASK","DELETE_TASK","FETCH_TASKS_SUCCESS","initialState","taskReducer","state","action","type","id","length","payload","filter","task"],"sources":["C:/Users/ruthr/OneDrive/Desktop/React To-do-app/todo-app/src/redux/reducers/taskReducer.js"],"sourcesContent":["import { ADD_TASK, DELETE_TASK, FETCH_TASKS_SUCCESS } from '../actions/taskActions';\r\n\r\nconst initialState = [];\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TASK:\r\n      return [...state, { id: state.length + 1, ...action.payload }];\r\n    case DELETE_TASK:\r\n      return state.filter(task => task.id !== action.payload);\r\n    case FETCH_TASKS_SUCCESS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,mBAAmB,QAAQ,wBAAwB;AAEnF,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGF,YAAY,EAAEG,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,QAAQ;MACX,OAAO,CAAC,GAAGK,KAAK,EAAE;QAAEG,EAAE,EAAEH,KAAK,CAACI,MAAM,GAAG,CAAC;QAAE,GAAGH,MAAM,CAACI;MAAQ,CAAC,CAAC;IAChE,KAAKT,WAAW;MACd,OAAOI,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKF,MAAM,CAACI,OAAO,CAAC;IACzD,KAAKR,mBAAmB;MACtB,OAAOI,MAAM,CAACI,OAAO;IACvB;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}